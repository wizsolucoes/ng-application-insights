# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: 'true'

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Build
    condition: ne(variables['build.sourceBranch'], 'refs/heads/main')
    jobs:
      - job: Build
        displayName: "Build and test"
        condition: succeeded()
        steps:
          # Install
          - task: Npm@1
            displayName: "Install root dependencies"
            inputs:
              command: "install"
          - task: Npm@1
            displayName: "Install library dependencies"
            inputs:
              command: "install"
              workingDir: '$(Build.SourcesDirectory)/projects/ng-application-insights'
          - task: Npm@1
            displayName: "Install schematics dependencies"
            inputs:
              command: "install"
              workingDir: '$(Build.SourcesDirectory)/projects/ng-application-insights/schematics'

          # Build
          - script: npx ng build ng-application-insights 
            displayName: 'Build library'
          - task: Npm@1
            displayName: "Build package"
            inputs:
              command: custom
              verbose: true
              customCommand: "run build"
              workingDir: '$(Build.SourcesDirectory)/projects/ng-application-insights'

          # Test
          - task: Npm@1
            displayName: "Test"
            inputs:
              command: "custom"
              verbose: true
              customCommand: "test"
              workingDir: '$(Build.SourcesDirectory)'

  - stage: Publish
    condition: eq(variables['build.sourceBranch'], 'refs/heads/main')
    jobs:
      - job: Publish
        displayName: "Publish"
        steps:
          # Install
          - task: Npm@1
            displayName: "Install root dependencies"
            inputs:
              command: "install"
          - task: Npm@1
            displayName: "Install library dependencies"
            inputs:
              command: "install"
              workingDir: '$(Build.SourcesDirectory)/projects/ng-application-insights'
          - task: Npm@1
            displayName: "Install schematics dependencies"
            inputs:
              command: "install"
              workingDir: '$(Build.SourcesDirectory)/projects/ng-application-insights/schematics'

          # Build
          - script: npx ng build ng-application-insights 
            displayName: 'Build library'
          - task: Npm@1
            displayName: "Build package"
            inputs:
              command: custom
              verbose: true
              customCommand: "run build"
              workingDir: '$(Build.SourcesDirectory)/projects/ng-application-insights'

          # Test
          - task: Npm@1
            displayName: "Test"
            inputs:
              command: custom
              verbose: true
              customCommand: "test"
              workingDir: '$(Build.SourcesDirectory)'

          # Publish
          - task: Npm@1
            displayName: "Publish"
            inputs:
              command: "custom"
              verbose: true
              customCommand: "publish"
              customEndpoint: "npmjs"
              workingDir: '$(Build.SourcesDirectory)/dist/ng-application-insights'
